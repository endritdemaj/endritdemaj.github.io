{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{72:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return l})),n.d(t,\"metadata\",(function(){return c})),n.d(t,\"rightToc\",(function(){return i})),n.d(t,\"default\",(function(){return b}));var r=n(2),a=n(6),o=(n(0),n(90)),l={id:\"kubernetescheatsheet\",title:\"Kubernetes Cheatsheet\",sidebar_label:\"Kubernetes Cheatsheat\"},c={unversionedId:\"documentation/kubernetescheatsheet\",id:\"documentation/kubernetescheatsheet\",isDocsHomePage:!1,title:\"Kubernetes Cheatsheet\",description:\"Kubernetes\",source:\"@site/docs/documentation/kubernetescheatsheet.md\",permalink:\"/endritdemaj.github.io/docs/documentation/kubernetescheatsheet\",editUrl:\"https://github.com/facebook/docusaurus/edit/master/website/docs/documentation/kubernetescheatsheet.md\",sidebar_label:\"Kubernetes Cheatsheat\",sidebar:\"someSidebar\",previous:{title:\"Docker Cheatsheat\",permalink:\"/endritdemaj.github.io/docs/documentation/dockercheatsheet\"},next:{title:\"IBM Tivoli Storage Manager (TSM) Cheatsheat\",permalink:\"/endritdemaj.github.io/docs/documentation/tivolicheatsheet\"}},i=[{value:\"Scaling ReplicaSets\",id:\"scaling-replicasets\",children:[]},{value:\"Run, Create and Expose Generators\",id:\"run-create-and-expose-generators\",children:[]}],s={rightToc:i};function b(e){var t=e.components,n=Object(a.a)(e,[\"components\"]);return Object(o.b)(\"wrapper\",Object(r.a)({},s,n,{components:t,mdxType:\"MDXLayout\"}),Object(o.b)(\"h1\",{id:\"kubernetes\"},\"Kubernetes\"),Object(o.b)(\"p\",null,\"Kubernetes: The whole orchestration system\\nK8s or Kube for short\\nkubectl: CLI to configure Kubernetes and manage apps\\nNode: Single server in the Kubernetes cluster\\nKubelet: Kubernetes agent running on nodes kubelet.service\\nControl Plane: Set of containers that manage the cluster\"),Object(o.b)(\"p\",null,\"Master and Workers\"),Object(o.b)(\"p\",null,\"Master\",Object(o.b)(\"br\",{parentName:\"p\"}),\"\\n\",\"Runs the following container\"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},\"etcd - distibuted store system key value to store configuration data\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"API  -  the way we talk to the cluster\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Scheduler - to controle the containers and pods\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Controller Manager - \"),Object(o.b)(\"li\",{parentName:\"ul\"},\"CoreDNS\")),Object(o.b)(\"p\",null,\"Nodes  \"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},\"kubelet Agent\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Kube-proxy - to controll the networking\")),Object(o.b)(\"p\",null,\"Pod: one or more containers running together on one Node\",Object(o.b)(\"br\",{parentName:\"p\"}),\"\\n\",\"Basic unit of deployment. containers are always in pods\",Object(o.b)(\"br\",{parentName:\"p\"}),\"\\n\",\"Controller: For creating/updating pods and other objects\",Object(o.b)(\"br\",{parentName:\"p\"}),\"\\n\",\"Many types of Controllers inc. Deployment, ReplicaSet, statefulSet\\nService: network endpoint to connect to a pod\\nNamespace: Filtered group of objects in cluster\"),Object(o.b)(\"p\",null,Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"kubectl version\"),\" to check version for client and server\"),Object(o.b)(\"p\",null,\"Two ways to deploy Pods (containers) : Via commands or via YAML\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"# to start a pod\\nkubectl run my-nginx --image nginx                      # create a single pod   # before 1.18 this would create a deployment\\nkubectl create deployment nginx --image nginx           # create a deployment with a replicaset in it which got pods running\\n\\n# to see what we did there\\nkubectl get pods\\nkubectl get all                             #see all objects\\n\")),Object(o.b)(\"p\",null,\"Pods -> ReplicaSet -> Deployment\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"kubectl delete deployment my-nginx\\nkubectl delete pod my-nginx                     # to delete the pod i created\\n\")),Object(o.b)(\"h2\",{id:\"scaling-replicasets\"},\"Scaling ReplicaSets\"),Object(o.b)(\"p\",null,\"Start a new deployment for Apache/pod\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"#OLD kubectl run my-apache --image httpd\\nkubectl create deployment my-apache --image httpd\\n\")),Object(o.b)(\"p\",null,\"Scale up to to replicas\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"kubectl scale deployment.apps/my-apache --replicas 2\\n#or\\nkubectl scale deploy my-apache --replicas 3\\n\")),Object(o.b)(\"p\",null,\"This is how it looks after the last commands with the Pods/Replicas/deployments\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"$kubectl get all\\nNAME                             READY   STATUS    RESTARTS   AGE\\npod/my-apache-65fd7bd7db-gn7qg   1/1     Running   0          2m23s\\npod/my-apache-65fd7bd7db-nt98m   1/1     Running   0          3m41s\\npod/my-apache-65fd7bd7db-snfp4   1/1     Running   0          54s\\n\\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\\nservice/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   21m\\n\\nNAME                        READY   UP-TO-DATE   AVAILABLE   AGE\\ndeployment.apps/my-apache   3/3     3            3           3m41s\\n\\nNAME                                   DESIRED   CURRENT   READY   AGE\\nreplicaset.apps/my-apache-65fd7bd7db   3         3         3       3m41s\\n\")),Object(o.b)(\"p\",null,\"Check pods\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"kubectl get pods                                    #get running pods\\n    -w                                              #to watch\\nkubectl logs deployment/my-apache                   # get the log of the deployment where only the log of one pod is showing\\n        --follow, --tail 10                         # like linux, follow the logs or show only tail 10\\nkubectl logs deployment/my-apache                       # see all logs for label -x`l \\n        --all-containers=true                       # to see logs for all containers\\n\\nkubectl describe pod/my-apache-65fd7bd7db-gn7qg     # describe pod and see events\\n\")),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},\"Learning Services Types\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Creating Services Types\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Exposing Containers\")),Object(o.b)(\"p\",null,\"A service is a stable address for pods. If we want to connect to pods, we need a service\\nCoreDNS allows us to sesorlve services by name.\\nkubectl expose                  #creates a service for existing pods\"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},\"ClusterIP (default) \",Object(o.b)(\"ul\",{parentName:\"li\"},Object(o.b)(\"li\",{parentName:\"ul\"},\"Single, internal virtual IP allocated\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"only reachable from within cluster (nodes and pods)\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"pods can reach service on apps port number\"))),Object(o.b)(\"li\",{parentName:\"ul\"},\"NodePort\",Object(o.b)(\"ul\",{parentName:\"li\"},Object(o.b)(\"li\",{parentName:\"ul\"},\"Designed for something outside the cluster\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"High port allocated on each node\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Port is open on every nodes IP\"))),Object(o.b)(\"li\",{parentName:\"ul\"},\"LoadBalancer\",Object(o.b)(\"ul\",{parentName:\"li\"},Object(o.b)(\"li\",{parentName:\"ul\"},\"Controls a LB endpoint external to the cluster\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Only available when infra provider gives you a LB\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"creates NodePort+ClusterIP services, tells LB to send to NodePort\"))),Object(o.b)(\"li\",{parentName:\"ul\"},\"ExternalName\",Object(o.b)(\"ul\",{parentName:\"li\"},Object(o.b)(\"li\",{parentName:\"ul\"},\"Stuff in our cluster need to talk outside the cluster\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"adds CNAME DNS record to CoreDNS only\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Not used for Pods, but for giving pods a DNS name to use for something outside K8s\")))),Object(o.b)(\"p\",null,\"Expose Deployment to port\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(r.a)({parentName:\"pre\"},{}),\"kubectl expose deployment/httpenv --port 8888           #exposing httpsenv to port 8888\\nkubectl get service                                     # to list all running services\\n#start a container temporary start with bash remove it after it\\nkubectl run --generator run-pod/v1 tmp-shell --rm -it --image bretfisher/netshoot -- bash\\n\\n#Expose httpenv to the NodePort so the Service is reachable outside of the Cluster\\nkubectl expose deployment/httpenv --port 8888 --name httpsenv-np --type NodePort # now we can curl localhost\\nkubectl expose deployment/httpenv --port 8888 --name httpsenv-lb --type LoadBalancer\\n\")),Object(o.b)(\"p\",null,\"Kubernetes Services DNS\"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},\"Starting with 1.11, internal DNS is provided by CoreDNS\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Like Swarm, this is DNS-Based Service Discovery\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"So Far we've been using hostnames to access Services\\n\",Object(o.b)(\"inlineCode\",{parentName:\"li\"},\"> curl <hostname>\")),Object(o.b)(\"li\",{parentName:\"ul\"},\"Namespaces to section up inside clusters \",Object(o.b)(\"inlineCode\",{parentName:\"li\"},\"kubectl get namespaces\"),\"\\nServices also have a FQDN\\n\",Object(o.b)(\"inlineCode\",{parentName:\"li\"},\"> curl <hostname>.<namespace>.svc.cluster.local\"))),Object(o.b)(\"h2\",{id:\"run-create-and-expose-generators\"},\"Run, Create and Expose Generators\"),Object(o.b)(\"p\",null,'These commands use helper templates called \"generators\"\\nEvery resource in Kubernetes has a specification or \"spec\"\\nTry it out with',Object(o.b)(\"br\",{parentName:\"p\"}),\"\\n\",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"> kubectl create deployment sample --image nginx --dry-run -o yaml\")))}b.isMDXComponent=!0},90:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return p})),n.d(t,\"b\",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n=\"function\"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:\"code\",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),p=b(n),d=r,m=p[\"\".concat(l,\".\").concat(d)]||p[d]||u[d]||o;return n?a.a.createElement(m,c(c({ref:t},s),{},{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if(\"string\"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType=\"string\"==typeof e?e:r,l[1]=c;for(var s=2;s<o;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName=\"MDXCreateElement\"}}]);","extractedComments":[]}