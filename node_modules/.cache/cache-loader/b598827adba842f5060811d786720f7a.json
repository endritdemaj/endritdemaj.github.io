{"remainingRequest":"/home/endrit/Documents/endritdemaj.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/endrit/Documents/endritdemaj.github.io/docs/documentation/dockercheatsheet.md","dependencies":[{"path":"/home/endrit/Documents/endritdemaj.github.io/docs/documentation/dockercheatsheet.md","mtime":1598208584001},{"path":"/home/endrit/Documents/endritdemaj.github.io/.docusaurus/docusaurus-plugin-content-docs/site-docs-documentation-dockercheatsheet-md-50d.json","mtime":1598207006665},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1598202333047},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/babel-loader/lib/index.js","mtime":1598202333047},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1598202332903},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1598202332899}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/endrit/Documents/endritdemaj.github.io/docs/documentation/dockercheatsheet.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","rightToc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'dockercheatsheet',\n\ttitle: 'Docker Cheatsheat',\n\tsidebar_label: 'Docker Cheatsheat'\n};\nexport const metadata = {\n  \"unversionedId\": \"documentation/dockercheatsheet\",\n  \"id\": \"documentation/dockercheatsheet\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Docker Cheatsheat\",\n  \"description\": \"You can write content using GitHub-flavored Markdown syntax.\",\n  \"source\": \"@site/docs/documentation/dockercheatsheet.md\",\n  \"permalink\": \"/endritdemaj.github.io/docs/documentation/dockercheatsheet\",\n  \"editUrl\": \"https://github.com/facebook/docusaurus/edit/master/website/docs/documentation/dockercheatsheet.md\",\n  \"sidebar_label\": \"Docker Cheatsheat\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Linux Cheatsheat\",\n    \"permalink\": \"/endritdemaj.github.io/docs/documentation/linuxcheatsheet\"\n  },\n  \"next\": {\n    \"title\": \"IBM Tivoli Storage Manager (TSM) Cheatsheat\",\n    \"permalink\": \"/endritdemaj.github.io/docs/documentation/tivolicheatsheet\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Docker Editions',\n  id: 'docker-editions',\n  children: []\n}, {\n  value: 'General',\n  id: 'general',\n  children: []\n}, {\n  value: 'Intro',\n  id: 'intro',\n  children: []\n}, {\n  value: 'General',\n  id: 'general-1',\n  children: []\n}, {\n  value: 'Networking',\n  id: 'networking',\n  children: [{\n    value: 'Docker Networks: DNS',\n    id: 'docker-networks-dns',\n    children: []\n  }]\n}];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`You can write content using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.github.com/gfm/\"\n      }}>{`GitHub-flavored Markdown syntax`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"docker-editions\"\n    }}>{`Docker Editions`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Docker is no longer just a \"Container runtime\"`}</li>\n      <li parentName=\"ul\">{`Dokcer moves fast, it mattes how you install it`}</li>\n      <li parentName=\"ul\">{`Docker CE (Community Edtion)`}</li>\n      <li parentName=\"ul\">{`Three major types of instlals: Direct, Mac/Win, Cloud`}</li>\n      <li parentName=\"ul\">{`Linux(different per distro) (don't use default package)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"general\"\n    }}>{`General`}</h2>\n    <p>{`Image is all the binaries of a container, scripts sources and so on\nA Container is a running instance of that image`}</p>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`what is happening in 'docker container run' `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Looks for that image locally in image chache, doesnt find anything`}</li>\n      <li parentName=\"ol\">{`then looks in remote image repository`}</li>\n      <li parentName=\"ol\">{`downloads the latest version`}</li>\n      <li parentName=\"ol\">{`creates new container absed on that images`}</li>\n      <li parentName=\"ol\">{`gices it a virtual IP on a pricate network inside a container`}</li>\n      <li parentName=\"ol\">{`opens up port 80 on host and forward to port 80 in contianer`}</li>\n      <li parentName=\"ol\">{`starts container by using CMD in dockerfile`}</li>\n    </ol>\n    <h1 {...{\n      \"id\": \"cheatsheet\"\n    }}>{`Cheatsheet`}</h1>\n    <h2 {...{\n      \"id\": \"general-1\"\n    }}>{`General`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`docker version                                      #shows the version of docker client(CLI) and docker engine (systemd-deamon)\ndocker info                                         #general info expanded e.g running contianers etc.\ndocker <managemend command> <command>               #docker cointainer run\ndocke ps                                            #list all running container. -a list all containers\ndocker top <container id>                           #list processes inside a running container\nps aux                                              #show processer running inside a docker container too without hiding it\ndocker container inspect                            #details of the container\ndocker container stats                              #stats of all container\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"networking\"\n    }}>{`Networking`}</h2>\n    <p><inlineCode parentName=\"p\">{`<bridge(docker0)>`}</inlineCode>{` is the default network that routes to the Host Network Interface`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`<host>`}</inlineCode>{` it gains performance by skipping virutal networks but sacrifices security of container model. Basically it is direkt on the Host`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`<none>`}</inlineCode>{` is not atached to anything`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker network ls                                   #List all docker networks\ndocker network inspect                              #inspect what we are doing\ndocker network create --driver                      #create a new network\ndocker network connect                              #atach a network to a container\ndocker network disconnect                           #detach a network from a container\n`}</code></pre>\n    <p>{`Create a new Network using the default `}<inlineCode parentName=\"p\">{`<bridge>`}</inlineCode>{` driver. If we need another driver, we have to specify it with `}<inlineCode parentName=\"p\">{`<--driver>`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`$docker network create my_app_net^C\n#list them\n$docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n8d2dc7348d3d        bridge              bridge              local\n9afc2ba4f278        host                host                local\ncd18d7f432a3        my_app_net          bridge              local\na0c8590e5ace        none                null                local\n\n$docker network inspect my_app_net \n[\n    {\n        \"Name\": \"my_app_net\",\n        \"Id\": \"cd18d7f432a34a979e9f4ae81b5c0be389cd65760fec4168f32c778ff05594ad\",\n        \"Created\": \"2020-08-23T19:59:17.646091944+02:00\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.18.0.0/16\",\n                    \"Gateway\": \"172.18.0.1\"\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Attachable\": false,\n        \"Ingress\": false,\n        \"ConfigFrom\": {\n            \"Network\": \"\"\n        },\n        \"ConfigOnly\": false,\n        \"Containers\": {},\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\n`}</code></pre>\n    <p>{`To run  a container on a specific network we can do this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$docker container run -d --name new_nginx --network my_app_net nginx\n444869e57cfbd60d237d7c6e5ce792dfa78626d41546e6528c6c4b9460b05e53\n`}</code></pre>\n    <p>{`If we inspect our network, we can see this: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$docker network inspect my_app_net \n[\n    {\n        \"Name\": \"my_app_net\",\n        \"Id\": \"cd18d7f432a34a979e9f4ae81b5c0be389cd65760fec4168f32c778ff05594ad\",\n        \"Created\": \"2020-08-23T19:59:17.646091944+02:00\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.18.0.0/16\",\n                    \"Gateway\": \"172.18.0.1\"\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Attachable\": false,\n        \"Ingress\": false,\n        \"ConfigFrom\": {\n            \"Network\": \"\"\n        },\n        \"ConfigOnly\": false,\n        \"Containers\": {\n            \"444869e57cfbd60d237d7c6e5ce792dfa78626d41546e6528c6c4b9460b05e53\": {\n                \"Name\": \"new_nginx\",\n                \"EndpointID\": \"e33e1489899ddfcfe36cbf06406561e3d2a17ad4a03a966d68ef9bd52192e47f\",\n                \"MacAddress\": \"02:42:ac:12:00:02\",\n                \"IPv4Address\": \"172.18.0.2/16\",\n                \"IPv6Address\": \"\"\n            }\n        },__\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\n`}</code></pre>\n    <p>{`If we want to connect an existing container to a network we have to run the following  `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker network connect <containerid> <networkid>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"docker-networks-dns\"\n    }}>{`Docker Networks: DNS`}</h3>\n    <p>{`In the world where containers changes from second  to second we cant rely on IPAddresses. Since its to dynamic\nThere is a build in solution for this and that is `}<strong parentName=\"p\">{`DNS-Naming`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker container run -d --name my_container_name \n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}