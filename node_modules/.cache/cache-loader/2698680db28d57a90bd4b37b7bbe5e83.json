{"remainingRequest":"/home/endrit/Documents/endritdemaj.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/endrit/Documents/endritdemaj.github.io/docs/documentation/kubernetescheatsheet.md","dependencies":[{"path":"/home/endrit/Documents/endritdemaj.github.io/docs/documentation/kubernetescheatsheet.md","mtime":1602956993814},{"path":"/home/endrit/Documents/endritdemaj.github.io/.docusaurus/docusaurus-plugin-content-docs/site-docs-documentation-kubernetescheatsheet-md-746.json","mtime":1602876735727},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1598202333047},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/babel-loader/lib/index.js","mtime":1598202333047},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1598202332903},{"path":"/home/endrit/Documents/endritdemaj.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1598202332899}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/endrit/Documents/endritdemaj.github.io/docs/documentation/kubernetescheatsheet.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","rightToc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"mHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,sBADwB,CAE5BC,KAAK,CAAE,uBAFqB,CAG5BC,aAAa,CAAE,uBAHa,CAApB,CAKT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,gBAAiB,oCADK,CAEtB,KAAM,oCAFgB,CAGtB,iBAAkB,KAHI,CAItB,QAAS,uBAJa,CAKtB,cAAe,YALO,CAMtB,SAAU,kDANY,CAOtB,YAAa,gEAPS,CAQtB,UAAW,uGARW,CAStB,gBAAiB,uBATK,CAUtB,UAAW,aAVW,CAWtB,WAAY,CACV,QAAS,mBADC,CAEV,YAAa,4DAFH,CAXU,CAetB,OAAQ,CACN,QAAS,6CADH,CAEN,YAAa,4DAFP,CAfc,CAAjB,CAoBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,qBADgB,CAEvBL,EAAE,CAAE,qBAFmB,CAGvBM,QAAQ,CAAE,EAHa,CAAD,CAIrB,CACDD,KAAK,CAAE,mCADN,CAEDL,EAAE,CAAE,kCAFH,CAGDM,QAAQ,CAAE,EAHT,CAJqB,CAQrB,CACDD,KAAK,CAAE,4BADN,CAEDL,EAAE,CAAE,2BAFH,CAGDM,QAAQ,CAAE,EAHT,CARqB,CAYrB,CACDD,KAAK,CAAE,eADN,CAEDL,EAAE,CAAE,eAFH,CAGDM,QAAQ,CAAE,EAHT,CAZqB,CAgBrB,CACDD,KAAK,CAAE,+BADN,CAEDL,EAAE,CAAE,+BAFH,CAGDM,QAAQ,CAAE,EAHT,CAhBqB,CAAjB,CAsBP,KAAMC,CAAAA,WAAW,CAAG,CAClBH,QADkB,CAApB,CAGA,KAAMI,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGC,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,YADA,CAAR,CAEK,YAFL,CAFK,CAKL,aAAK;;;;;yDAAL,CALK,CAWL,aAAK,oBAAL,CAXK,CAYL,aAAK,QAAL,CAAa,UAAI,UAAU,CAAC,GAAf,EAAb,CAAuC;CAAvC,CACA,8BADA,CAZK,CAcL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,sEAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,wCAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,iDAAtB,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,uBAAtB,CAJF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CALF,CAdK,CAqBL,aAAK,SAAL,CArBK,CAsBL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,eAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,yCAAtB,CAFF,CAtBK,CA0BL,aAAK,0DAAL,CAA+D,UAAI,UAAU,CAAC,GAAf,EAA/D,CAAyF;CAAzF,CACA,yDADA,CACyD,UAAI,UAAU,CAAC,GAAf,EADzD,CACmF;CADnF,CAEA,0DAFA,CAE0D,UAAI,UAAU,CAAC,GAAf,EAF1D,CAEoF;CAFpF,CAGA;;gDAHA,CA1BK,CAgCL,aAAG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,iBAA7B,CAAH,CAAgE,yCAAhE,CAhCK,CAiCL,aAAK,iEAAL,CAjCK,CAkCL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;CAAjC,CAAL,CAlCK,CA0CL,aAAK,kCAAL,CA1CK,CA2CL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;CAAjC,CAAL,CA3CK,CA8CL,SAAQ,CACN,KAAM,qBADA,CAAR,CAEK,qBAFL,CA9CK,CAiDL,aAAK,uCAAL,CAjDK,CAkDL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;CAAjC,CAAL,CAlDK,CAqDL,aAAK,yBAAL,CArDK,CAsDL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;CAAjC,CAAL,CAtDK,CA0DL,aAAK,iFAAL,CA1DK,CA2DL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;;;;;;;CAAjC,CAAL,CA3DK,CA0EL,aAAK,YAAL,CA1EK,CA2EL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;CAAjC,CAAL,CA3EK,CAoFL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,yBAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,yBAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,qBAAtB,CAHF,CApFK,CAyFL,aAAK;;qEAAL,CAzFK,CA4FL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,sBAAtB,CAA4C,UAAI,UAAU,CAAC,IAAf,EACxC,UAAI,UAAU,CAAC,IAAf,EAAsB,uCAAtB,CADwC,CAExC,UAAI,UAAU,CAAC,IAAf,EAAsB,qDAAtB,CAFwC,CAGxC,UAAI,UAAU,CAAC,IAAf,EAAsB,4CAAtB,CAHwC,CAA5C,CADF,CAME,UAAI,UAAU,CAAC,IAAf,EAAsB,UAAtB,CAAgC,UAAI,UAAU,CAAC,IAAf,EAC5B,UAAI,UAAU,CAAC,IAAf,EAAsB,4CAAtB,CAD4B,CAE5B,UAAI,UAAU,CAAC,IAAf,EAAsB,kCAAtB,CAF4B,CAG5B,UAAI,UAAU,CAAC,IAAf,EAAsB,gCAAtB,CAH4B,CAAhC,CANF,CAWE,UAAI,UAAU,CAAC,IAAf,EAAsB,cAAtB,CAAoC,UAAI,UAAU,CAAC,IAAf,EAChC,UAAI,UAAU,CAAC,IAAf,EAAsB,gDAAtB,CADgC,CAEhC,UAAI,UAAU,CAAC,IAAf,EAAsB,mDAAtB,CAFgC,CAGhC,UAAI,UAAU,CAAC,IAAf,EAAsB,mEAAtB,CAHgC,CAApC,CAXF,CAgBE,UAAI,UAAU,CAAC,IAAf,EAAsB,cAAtB,CAAoC,UAAI,UAAU,CAAC,IAAf,EAChC,UAAI,UAAU,CAAC,IAAf,EAAsB,uDAAtB,CADgC,CAEhC,UAAI,UAAU,CAAC,IAAf,EAAsB,uCAAtB,CAFgC,CAGhC,UAAI,UAAU,CAAC,IAAf,EAAsB,oFAAtB,CAHgC,CAApC,CAhBF,CA5FK,CAkHL,aAAK,2BAAL,CAlHK,CAmHL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;CAAjC,CAAL,CAnHK,CA4HL,aAAK,yBAAL,CA5HK,CA6HL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,yDAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,iDAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB;CAAtB,CACJ,kBAAY,UAAU,CAAC,IAAvB,EAA8B,mBAA9B,CADI,CAHF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,2CAAtB,CAAiE,kBAAY,UAAU,CAAC,IAAvB,EAA8B,wBAA9B,CAAjE,CAAsI;;CAAtI,CAEJ,kBAAY,UAAU,CAAC,IAAvB,EAA8B,iDAA9B,CAFI,CALF,CA7HK,CAsIL,SAAQ,CACN,KAAM,kCADA,CAAR,CAEK,mCAFL,CAtIK,CAyIL,aAAK;;gBAAL,CAEa,UAAI,UAAU,CAAC,GAAf,EAFb,CAEuC;CAFvC,CAGF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,oEAA7B,CAHE,CAzIK,CA6IL,SAAQ,CACN,KAAM,2BADA,CAAR,CAEK,4BAFL,CA7IK,CAgJL,aAAK;;2DAAL,CAhJK,CAmJL,SAAQ,CACN,KAAM,eADA,CAAR,CAEK,eAFL,CAnJK,CAsJL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;CAAjC,CAAL,CAtJK,CA6JL,SAAQ,CACN,KAAM,+BADA,CAAR,CAEK,+BAFL,CA7JK,CAgKL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,8CAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,0CAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,iEAAtB,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,6DAAtB,CAJF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,aAAtB,CALF,CAME,UAAI,UAAU,CAAC,IAAf,EAAsB,OAAtB,CANF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAsB,WAAtB,CAPF,CAQE,UAAI,UAAU,CAAC,IAAf,EAAsB,OAAtB,CARF,CAhKK,CA0KL,aAAK,uBAAL,CA1KK,CA2KL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAjC,CAAL,CA3KK,CA2ML,aAAK,yBAAL,CAA8B,UAAI,UAAU,CAAC,GAAf,EAA9B,CAAwD;CAAxD,CACA,6CADA,CAC6C,UAAI,UAAU,CAAC,GAAf,EAD7C,CACuE;CADvE,CAEF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,sCAA7B,CAFE,CAE8E,UAAI,UAAU,CAAC,GAAf,EAF9E,CAEwG;CAFxG,CAGA,qBAHA,CAGqB,UAAI,UAAU,CAAC,GAAf,EAHrB,CAG+C;CAH/C,CAIF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,+BAA7B,CAJE,CA3MK,CAAP,CAiND,CAED,CACAD,UAAU,CAACG,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'kubernetescheatsheet',\n\ttitle: 'Kubernetes Cheatsheet',\n\tsidebar_label: 'Kubernetes Cheatsheat'\n};\nexport const metadata = {\n  \"unversionedId\": \"documentation/kubernetescheatsheet\",\n  \"id\": \"documentation/kubernetescheatsheet\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Kubernetes Cheatsheet\",\n  \"description\": \"Kubernetes\",\n  \"source\": \"@site/docs/documentation/kubernetescheatsheet.md\",\n  \"permalink\": \"/endritdemaj.github.io/docs/documentation/kubernetescheatsheet\",\n  \"editUrl\": \"https://github.com/facebook/docusaurus/edit/master/website/docs/documentation/kubernetescheatsheet.md\",\n  \"sidebar_label\": \"Kubernetes Cheatsheat\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Docker Cheatsheat\",\n    \"permalink\": \"/endritdemaj.github.io/docs/documentation/dockercheatsheet\"\n  },\n  \"next\": {\n    \"title\": \"IBM Tivoli Storage Manager (TSM) Cheatsheat\",\n    \"permalink\": \"/endritdemaj.github.io/docs/documentation/tivolicheatsheet\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Scaling ReplicaSets',\n  id: 'scaling-replicasets',\n  children: []\n}, {\n  value: 'Run, Create and Expose Generators',\n  id: 'run-create-and-expose-generators',\n  children: []\n}, {\n  value: 'Imperative vs. Declarative',\n  id: 'imperative-vs-declarative',\n  children: []\n}, {\n  value: 'kubectl apply',\n  id: 'kubectl-apply',\n  children: []\n}, {\n  value: 'Kubernetes Configuration YAML',\n  id: 'kubernetes-configuration-yaml',\n  children: []\n}];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"kubernetes\"\n    }}>{`Kubernetes`}</h1>\n    <p>{`Kubernetes: The whole orchestration system\nK8s or Kube for short\nkubectl: CLI to configure Kubernetes and manage apps\nNode: Single server in the Kubernetes cluster\nKubelet: Kubernetes agent running on nodes kubelet.service\nControl Plane: Set of containers that manage the cluster`}</p>\n    <p>{`Master and Workers`}</p>\n    <p>{`Master`}<br parentName=\"p\"></br>{`\n`}{`Runs the following container`}</p>\n    <ul>\n      <li parentName=\"ul\">{`etcd - distibuted store system key value to store configuration data`}</li>\n      <li parentName=\"ul\">{`API  -  the way we talk to the cluster`}</li>\n      <li parentName=\"ul\">{`Scheduler - to controle the containers and pods`}</li>\n      <li parentName=\"ul\">{`Controller Manager - `}</li>\n      <li parentName=\"ul\">{`CoreDNS`}</li>\n    </ul>\n    <p>{`Nodes  `}</p>\n    <ul>\n      <li parentName=\"ul\">{`kubelet Agent`}</li>\n      <li parentName=\"ul\">{`Kube-proxy - to controll the networking`}</li>\n    </ul>\n    <p>{`Pod: one or more containers running together on one Node`}<br parentName=\"p\"></br>{`\n`}{`Basic unit of deployment. containers are always in pods`}<br parentName=\"p\"></br>{`\n`}{`Controller: For creating/updating pods and other objects`}<br parentName=\"p\"></br>{`\n`}{`Many types of Controllers inc. Deployment, ReplicaSet, statefulSet\nService: network endpoint to connect to a pod\nNamespace: Filtered group of objects in cluster`}</p>\n    <p><inlineCode parentName=\"p\">{`kubectl version`}</inlineCode>{` to check version for client and server`}</p>\n    <p>{`Two ways to deploy Pods (containers) : Via commands or via YAML`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# to start a pod\nkubectl run my-nginx --image nginx                      # create a single pod   # before 1.18 this would create a deployment\nkubectl create deployment nginx --image nginx           # create a deployment with a replicaset in it which got pods running\n\n# to see what we did there\nkubectl get pods\nkubectl get all                             #see all objects\n`}</code></pre>\n    <p>{`Pods -> ReplicaSet -> Deployment`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl delete deployment my-nginx\nkubectl delete pod my-nginx                     # to delete the pod i created\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"scaling-replicasets\"\n    }}>{`Scaling ReplicaSets`}</h2>\n    <p>{`Start a new deployment for Apache/pod`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#OLD kubectl run my-apache --image httpd\nkubectl create deployment my-apache --image httpd\n`}</code></pre>\n    <p>{`Scale up to to replicas`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl scale deployment.apps/my-apache --replicas 2\n#or\nkubectl scale deploy my-apache --replicas 3\n`}</code></pre>\n    <p>{`This is how it looks after the last commands with the Pods/Replicas/deployments`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$kubectl get all\nNAME                             READY   STATUS    RESTARTS   AGE\npod/my-apache-65fd7bd7db-gn7qg   1/1     Running   0          2m23s\npod/my-apache-65fd7bd7db-nt98m   1/1     Running   0          3m41s\npod/my-apache-65fd7bd7db-snfp4   1/1     Running   0          54s\n\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   21m\n\nNAME                        READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/my-apache   3/3     3            3           3m41s\n\nNAME                                   DESIRED   CURRENT   READY   AGE\nreplicaset.apps/my-apache-65fd7bd7db   3         3         3       3m41s\n`}</code></pre>\n    <p>{`Check pods`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl get pods                                    #get running pods\n    -w                                              #to watch\nkubectl logs deployment/my-apache                   # get the log of the deployment where only the log of one pod is showing\n        --follow, --tail 10                         # like linux, follow the logs or show only tail 10\nkubectl logs deployment/my-apache                       # see all logs for label -x\\`l \n        --all-containers=true                       # to see logs for all containers\n\nkubectl describe pod/my-apache-65fd7bd7db-gn7qg     # describe pod and see events\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Learning Services Types`}</li>\n      <li parentName=\"ul\">{`Creating Services Types`}</li>\n      <li parentName=\"ul\">{`Exposing Containers`}</li>\n    </ul>\n    <p>{`A service is a stable address for pods. If we want to connect to pods, we need a service\nCoreDNS allows us to sesorlve services by name.\nkubectl expose                  #creates a service for existing pods`}</p>\n    <ul>\n      <li parentName=\"ul\">{`ClusterIP (default) `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Single, internal virtual IP allocated`}</li>\n          <li parentName=\"ul\">{`only reachable from within cluster (nodes and pods)`}</li>\n          <li parentName=\"ul\">{`pods can reach service on apps port number`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`NodePort`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Designed for something outside the cluster`}</li>\n          <li parentName=\"ul\">{`High port allocated on each node`}</li>\n          <li parentName=\"ul\">{`Port is open on every nodes IP`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`LoadBalancer`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Controls a LB endpoint external to the cluster`}</li>\n          <li parentName=\"ul\">{`Only available when infra provider gives you a LB`}</li>\n          <li parentName=\"ul\">{`creates NodePort+ClusterIP services, tells LB to send to NodePort`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`ExternalName`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Stuff in our cluster need to talk outside the cluster`}</li>\n          <li parentName=\"ul\">{`adds CNAME DNS record to CoreDNS only`}</li>\n          <li parentName=\"ul\">{`Not used for Pods, but for giving pods a DNS name to use for something outside K8s`}</li>\n        </ul></li>\n    </ul>\n    <p>{`Expose Deployment to port`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl expose deployment/httpenv --port 8888           #exposing httpsenv to port 8888\nkubectl get service                                     # to list all running services\n#start a container temporary start with bash remove it after it\nkubectl run --generator run-pod/v1 tmp-shell --rm -it --image bretfisher/netshoot -- bash\n\n#Expose httpenv to the NodePort so the Service is reachable outside of the Cluster\nkubectl expose deployment/httpenv --port 8888 --name httpsenv-np --type NodePort # now we can curl localhost\nkubectl expose deployment/httpenv --port 8888 --name httpsenv-lb --type LoadBalancer\n`}</code></pre>\n    <p>{`Kubernetes Services DNS`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Starting with 1.11, internal DNS is provided by CoreDNS`}</li>\n      <li parentName=\"ul\">{`Like Swarm, this is DNS-Based Service Discovery`}</li>\n      <li parentName=\"ul\">{`So Far we've been using hostnames to access Services\n`}<inlineCode parentName=\"li\">{`> curl <hostname>`}</inlineCode></li>\n      <li parentName=\"ul\">{`Namespaces to section up inside clusters `}<inlineCode parentName=\"li\">{`kubectl get namespaces`}</inlineCode>{`\nServices also have a FQDN\n`}<inlineCode parentName=\"li\">{`> curl <hostname>.<namespace>.svc.cluster.local`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"run-create-and-expose-generators\"\n    }}>{`Run, Create and Expose Generators`}</h2>\n    <p>{`These commands use helper templates called \"generators\"\nEvery resource in Kubernetes has a specification or \"spec\"\nTry it out with`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`> kubectl create deployment sample --image nginx --dry-run -o yaml`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"imperative-vs-declarative\"\n    }}>{`Imperative vs. Declarative`}</h2>\n    <p>{`Learn the Imperative CLI for easy control of local and test setups\nMove to apply -f file.yml and apply -f directory\\\\\nStore yaml in git, git commit each change before you apply`}</p>\n    <h2 {...{\n      \"id\": \"kubectl-apply\"\n    }}>{`kubectl apply`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`#create/update resources in a file\nkubectl apply -f filename.yml\n#create/update a whole driectory of yaml\nkubectl apply -f myyaml/\n#create/update from  a URL\nkubectl apply -f https://bret.run/pod.yml\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"kubernetes-configuration-yaml\"\n    }}>{`Kubernetes Configuration YAML`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Kubernetes configuration file (YAML or JSON)`}</li>\n      <li parentName=\"ul\">{`Each file contains one or more manifests`}</li>\n      <li parentName=\"ul\">{`Each manifest describes an API object (deployment, job, secret)`}</li>\n      <li parentName=\"ul\">{`Each manifest needs four parts(root key:values in the file)`}</li>\n      <li parentName=\"ul\">{`apiVersion:`}</li>\n      <li parentName=\"ul\">{`kind:`}</li>\n      <li parentName=\"ul\">{`metadata:`}</li>\n      <li parentName=\"ul\">{`spec:`}</li>\n    </ul>\n    <p>{`Example of a yml-file`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$cat app.yml \napiVersion: v1\nkind: Service\nmetadata:\n  name: app-nginx-service\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n  selector:\n    app: app-nginx\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app-nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: app-nginx\n  template:\n    metadata:\n      labels:\n        app: app-nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.17.3\n        ports:\n        - containerPort: 80\n`}</code></pre>\n    <p>{`Building Your YAML spec`}<br parentName=\"p\"></br>{`\n`}{`We can get  all the keys each kind supports`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`kubectl explain services --recursive`}</inlineCode><br parentName=\"p\"></br>{`\n`}{`List only the specs`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`kubectl explain services.spec`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}